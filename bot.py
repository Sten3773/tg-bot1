from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackContext

# –£–∫–∞–∂–∏—Ç–µ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ –∏ ID –∞–¥–º–∏–Ω–∞
BOT_TOKEN = "7642920430:AAFw9JigCoxk2OhdwJo04U_7aJLae8-gtBE"
ADMIN_ID = 702925787

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
WELCOME_MESSAGE_RU = (
    "üëã –ü—Ä–∏–≤–µ—Ç! –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –º—ã—Å–ª—è–º–∏, –ø—Ä–æ–±–ª–µ–º–∞–º–∏ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ –ø–æ –ø–æ–≤–æ–¥—É –Ω–∞—à–µ–≥–æ –≤—É–∑–∞, —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π.\n\n"
    "üìù –ù–∞–ø–∏—à–∏—Ç–µ –≤—Å—ë, —á—Ç–æ —Å—á–∏—Ç–∞–µ—Ç–µ –≤–∞–∂–Ω—ã–º. –í–∞—à —Ç–µ–∫—Å—Ç –æ—Å—Ç–∞–Ω–µ—Ç—Å—è **–∞–Ω–æ–Ω–∏–º–Ω—ã–º**, –µ–≥–æ –ø—Ä–æ—á–∏—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä –∏–ª–∏ –µ–≥–æ –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å.\n\n"
    "–ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´üì® –ó–∞–≤–µ—Ä—à–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å¬ª."
)

WELCOME_MESSAGE_UZ = (
    "üëã Salom! Universitetimiz, talabalar yoki o'qituvchilar haqidagi fikrlaringiz, muammolaringiz yoki takliflaringizni biz bilan baham ko'rishingiz mumkin.\n\n"
    "üìù O'zingiz muhim deb hisoblagan hamma narsani yozing. Sizning matningiz **maxfiy** qoladi, uni faqat direktor yoki uning o'rinbosari o'qiydi.\n\n"
    "Yakunlash uchun ¬´üì® Yakunlash va jo'natish¬ª tugmasini bosing."
)

# –û—Ç–≤–µ—Ç –Ω–∞ /start
async def start(update: Update, context: CallbackContext) -> None:
    keyboard = [["üì® –ó–∞–≤–µ—Ä—à–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    
    await update.message.reply_text(WELCOME_MESSAGE_RU, reply_markup=reply_markup)
    await update.message.reply_text(WELCOME_MESSAGE_UZ)

# –°–±–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: CallbackContext) -> None:
    user_message = update.message.text

    if user_message == "üì® –ó–∞–≤–µ—Ä—à–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å":
        collected_text = context.user_data.get("messages", [])
        if collected_text:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É —Å–æ–±—Ä–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            full_message = "\n\n".join(collected_text)
            await context.bot.send_message(
                chat_id=ADMIN_ID,
                text=f"üì© –ù–æ–≤–æ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n{full_message}"
            )
            await update.message.reply_text("‚úÖ –í–∞—à–∏ –º—ã—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã. –°–ø–∞—Å–∏–±–æ!")
            context.user_data.clear()  # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        else:
            await update.message.reply_text("‚ùå –í—ã –µ—â—ë –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–ø–∏—Å–∞–ª–∏.")
    else:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if "messages" not in context.user_data:
            context.user_data["messages"] = []
        context.user_data["messages"].append(user_message)
        await update.message.reply_text("‚úçÔ∏è –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∞–Ω–æ. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ ¬´üì® –ó–∞–≤–µ—Ä—à–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å¬ª.")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def main():
    application = Application.builder().token(BOT_TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()

if __name__ == "__main__":
    main()

